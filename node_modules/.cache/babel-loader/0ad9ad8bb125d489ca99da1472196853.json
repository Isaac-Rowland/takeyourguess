{"ast":null,"code":"var _jsxFileName = \"/Users/isaacrowland/sei/project4/takeyourguess/src/player.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player(_ref) {\n  _s();\n\n  let {\n    song\n  } = _ref;\n  const [play, setPlay] = useState(false);\n  useEffect(() => setPlay(true), [song]);\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) setPlay(false);\n    },\n    play: play,\n    uris: song ? [song] : []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"jVhLcXDeOrLi5A95zDr62ndrz9E=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/isaacrowland/sei/project4/takeyourguess/src/player.js"],"names":["useState","useEffect","SpotifyPlayer","Player","song","play","setPlay","state","isPlaying"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,eAAe,SAASC,MAAT,OAA0B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAMK,OAAO,CAAC,IAAD,CAAd,EAAsB,CAACF,IAAD,CAAtB,CAAT;AAEA,sBACE,QAAC,aAAD;AACE,IAAA,YAAY,MADd;AAEE,IAAA,QAAQ,EAAEG,KAAK,IAAI;AACjB,UAAI,CAACA,KAAK,CAACC,SAAX,EAAsBF,OAAO,CAAC,KAAD,CAAP;AACvB,KAJH;AAKE,IAAA,IAAI,EAAED,IALR;AAME,IAAA,IAAI,EAAED,IAAI,GAAG,CAACA,IAAD,CAAH,GAAY;AANxB;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAfuBD,M;;KAAAA,M","sourcesContent":["import { useState, useEffect } from \"react\"\nimport SpotifyPlayer from \"react-spotify-web-playback\"\n\nexport default function Player({ song }) {\n  const [play, setPlay] = useState(false)\n\n  useEffect(() => setPlay(true), [song])\n\n  return (\n    <SpotifyPlayer\n      showSaveIcon\n      callback={state => {\n        if (!state.isPlaying) setPlay(false)\n      }}\n      play={play}\n      uris={song ? [song] : []}\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}
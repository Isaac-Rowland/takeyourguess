{"ast":null,"code":"import axios from \"axios\";\nexport const getUrl = async (token, todaysSong) => {\n  const header = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const res = await axios.get(`https://api.spotify.com/v1/search?q=$${todaysSong}%20theme&type=track`, header);\n  return res.data.tracks.items[0].uri;\n};\n\nfunction setSongUri(todaysSong, setSong) {\n  spotifyToken().then(token => getUrl(token, todaysSong)).then(song => setSong(song)).then(() => console.log(song));\n}","map":{"version":3,"sources":["/Users/isaacrowland/sei/project4/takeyourguess/src/apiData.js"],"names":["axios","getUrl","token","todaysSong","header","headers","Accept","Authorization","res","get","data","tracks","items","uri","setSongUri","setSong","spotifyToken","then","song","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,MAAM,GAAG,OAAOC,KAAP,EAAcC,UAAd,KAA6B;AACjD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACTC,MAAAA,MAAM,EAAE,kBADC;AAET,sBAAgB,kBAFP;AAGTC,MAAAA,aAAa,EAAG,UAASL,KAAM;AAHtB;AADI,GAAf;AAOA,QAAMM,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,wCAAuCN,UAAW,qBAA7D,EAAmFC,MAAnF,CAAlB;AACA,SAAOI,GAAG,CAACE,IAAJ,CAASC,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,GAAhC;AACD,CAVM;;AAYP,SAASC,UAAT,CAAoBX,UAApB,EAAgCY,OAAhC,EAAyC;AACvCC,EAAAA,YAAY,GACXC,IADD,CACMf,KAAK,IAAID,MAAM,CAACC,KAAD,EAAQC,UAAR,CADrB,EAECc,IAFD,CAEMC,IAAI,IAAIH,OAAO,CAACG,IAAD,CAFrB,EAGCD,IAHD,CAGM,MAAME,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAHZ;AAID","sourcesContent":["import axios from \"axios\";\n\n\nexport const getUrl = async (token, todaysSong) => {\n  const header = {\n    headers: {\n    Accept: \"application/json\", \n    \"Content-Type\": \"application/json\", \n    Authorization: `Bearer ${token}`\n    }\n  }\n  const res = await axios.get(`https://api.spotify.com/v1/search?q=$${todaysSong}%20theme&type=track`, header)\n  return res.data.tracks.items[0].uri\n}\n\nfunction setSongUri(todaysSong, setSong) {\n  spotifyToken()\n  .then(token => getUrl(token, todaysSong))\n  .then(song => setSong(song))\n  .then(() => console.log(song))\n}"]},"metadata":{},"sourceType":"module"}